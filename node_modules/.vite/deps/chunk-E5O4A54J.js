import {
  __publicField
} from "./chunk-MB5FDF5C.js";

// node_modules/@yext/pages/dist/util/runtime.js
var Runtime = class {
  constructor() {
    __publicField(this, "name");
    __publicField(this, "version");
    var _a;
    if (typeof process !== "undefined") {
      this.name = "node";
      this.version = process.versions.node;
    } else if (typeof window !== "undefined" && !("Deno" in window)) {
      this.name = "browser";
      this.version = navigator.userAgent;
    } else {
      this.name = "deno";
      this.version = "";
      if (typeof window !== "undefined") {
        this.version = ((_a = window == null ? void 0 : window.Deno) == null ? void 0 : _a.version.deno) || "";
      }
    }
  }
  getNodeMajorVersion() {
    if (this.name != "node") {
      throw new Error("Not running in Node.");
    }
    return +this.version.split(".")[0];
  }
};
var getRuntime = () => {
  return new Runtime();
};

// node_modules/@yext/pages/dist/util/fetch.js
var fetchInternal = async (input, init) => {
  const runtime = getRuntime();
  if (runtime.name == "node" && runtime.getNodeMajorVersion() < 18) {
    const { default: crossFetch } = await import("./browser-ponyfill-BGOJLG6I.js");
    return crossFetch(input, init);
  }
  return fetch(input, init);
};

// node_modules/@yext/pages/dist/util/env.js
var isProduction = (domain) => {
  var _a;
  const runtime = getRuntime();
  return runtime.name === "browser" && domain === ((_a = window == null ? void 0 : window.location) == null ? void 0 : _a.hostname);
};

export {
  getRuntime,
  fetchInternal,
  isProduction
};
//# sourceMappingURL=chunk-E5O4A54J.js.map
